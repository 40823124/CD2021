<h1>About</h1>
<p><img alt="" height="306" src="/images/EUt8sox.gif" width="500"/></p>
<p>..</p>
<h3>About me 40823124.</h3>
<p></p>
<h1>Team project</h1>
<h2>Team1 W2</h2>
<p>設計出可上下移動之梯子</p>
<p><img alt="" height="500" src="/images/w2.gif" width="900"/></p>
<h2>Team1 W3</h2>
<p>發覺梯子之方案過於複雜短時間內不可行，改成坦克車</p>
<p><img alt="" height="500" src="/images/w3.gif" width="900"/></p>
<p>控制砲台轉動與車輪程式碼</p>
<p><img alt="" height="306" src="/images/w3_2.gif" width="500"/></p>
<p><br/> 車輪</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==2007) then
                    -- up key
                    velocity=1
                    torque=2
                    hammer_back = 0

                    
                end
                if (auxiliaryData[1]==2008) then
                    -- down key
                     hammer_back = 1
                     torque=-2
                     velocity = -1

                end
               
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
 
        -- We take care of setting the desired top position:
        sim.setJointTargetPosition(joint, velocity)
        sim.setJointForce(joint,torque)
        
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint1'),sim.getObjectHandle('joint3')
hammer=sim.getObjectHandle('weel1'),sim.getObjectHandle('weel3')
velocity=0
hammer_back=0
torque=0
orientation=sim.getJointPosition(joint, -1)
position=sim.getObjectPosition(hammer,-1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:

</pre>
<p>砲台</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==97) then
                    -- a key
                    velocity=0.01
                    torque=0.02
                    hammer_back = 0

                    
                end
                if (auxiliaryData[1]==100) then
                    -- d key
                     hammer_back = 1
                     torque=-0.02
                     velocity = -0.01

                end
               
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
 
        -- We take care of setting the desired top position:
        sim.setJointTargetPosition(joint, velocity)
        sim.setJointForce(joint,torque)
        
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint0')
hammer=sim.getObjectHandle('top')
velocity=0
hammer_back=0
torque=0
orientation=sim.getJointPosition(joint, -1)
position=sim.getObjectPosition(hammer,-1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:

threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==97) then
                    -- a key
                    velocity=0.01
                    torque=0.02
                    hammer_back = 0

                    
                end
                if (auxiliaryData[1]==100) then
                    -- d key
                     hammer_back = 1
                     torque=-0.02
                     velocity = -0.01

                end
               
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
 
        -- We take care of setting the desired top position:
        sim.setJointTargetPosition(joint, velocity)
        sim.setJointForce(joint,torque)
        
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint0')
hammer=sim.getObjectHandle('top')
velocity=0
hammer_back=0
torque=0
orientation=sim.getJointPosition(joint, -1)
position=sim.getObjectPosition(hammer,-1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:

</pre>